{"ast":null,"code":"var _jsxFileName = \"/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  //const [enteredTitle, setEnteredTitle] = useState(\"\")\n  //const [enteredAmount, setEnteredAmount] = useState(\"\")\n  //const [enteredDate, setEnteredDate] = useState(\"\")\n  //You can join the three states in one const using objects\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n\n  function titleChangeHandler(e) {\n    //When updating state that depends on the previous state always use this syntax\n    //React executes the function, therefore is sure to create a snapshot of the prevState and avoid data loss\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: e.target.value\n      };\n    });\n  }\n\n  function amountChangeHandler(e) {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: e.target.value\n      };\n    });\n  }\n\n  function dateChangeHandler(e) {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: e.target.value\n      };\n    });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: parseFloat(userInput.enteredAmount),\n      date: new Date(userInput.enteredDate)\n    };\n    props.onSaveExpenseData(expenseData); //This reset the form fields\n\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\"\n    });\n    props.toggleBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput.enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: userInput.enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: userInput.enteredDate,\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"fOKiQJ0uFtiE+wpCN1+3hpMhKHE=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","e","prevState","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","parseFloat","date","Date","onSaveExpenseData","toggleBack"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  //const [enteredTitle, setEnteredTitle] = useState(\"\")\n  //const [enteredAmount, setEnteredAmount] = useState(\"\")\n  //const [enteredDate, setEnteredDate] = useState(\"\")\n\n  //You can join the three states in one const using objects\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  function titleChangeHandler(e) {\n    //When updating state that depends on the previous state always use this syntax\n    //React executes the function, therefore is sure to create a snapshot of the prevState and avoid data loss\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: e.target.value };\n    });\n  }\n\n  function amountChangeHandler(e) {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredAmount: e.target.value };\n    });\n  }\n\n  function dateChangeHandler(e) {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredDate: e.target.value };\n    });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: parseFloat(userInput.enteredAmount),\n      date: new Date(userInput.enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n\n    //This reset the form fields\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\",\n    });\n    props.toggleBack()\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__controls\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={userInput.enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={userInput.enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label>Date</label>\n          <input\n            value={userInput.enteredDate}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"submit\">Add Expense</button>\n          <button>Cancel</button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}