{"ast":null,"code":"var _jsxFileName = \"/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/Expenses/ExpensesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesList(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  function handleFilterChange(year) {\n    setFilteredYear(year);\n  }\n\n  const data = props.data.filter(expense => expense.date.getFullYear() === parseFloat(filteredYear));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onFilterChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), data.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no expenses this Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }, this), data.length > 0 && data.map(expense => {\n        return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n          title: expense.title,\n          amount: expense.amount,\n          date: expense.date\n        }, expense.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpensesList, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/Expenses/ExpensesList.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","ExpensesList","props","filteredYear","setFilteredYear","handleFilterChange","year","data","filter","expense","date","getFullYear","parseFloat","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,WAASQ,kBAAT,CAA4BC,IAA5B,EAAkC;AAChCF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACD;;AAED,QAAMC,IAAI,GAAGL,KAAK,CAACK,IAAN,CAAWC,MAAX,CACVC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,OAA+BC,UAAU,CAACT,YAAD,CAD3C,CAAb;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,YADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGE,IAAI,CAACM,MAAL,KAAgB,CAAhB,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALxB,EAMGN,IAAI,CAACM,MAAL,GAAc,CAAd,IACCN,IAAI,CAACO,GAAL,CAAUL,OAAD,IAAa;AACpB,4BACE,QAAC,WAAD;AAEE,UAAA,KAAK,EAAEA,OAAO,CAACM,KAFjB;AAGE,UAAA,MAAM,EAAEN,OAAO,CAACO,MAHlB;AAIE,UAAA,IAAI,EAAEP,OAAO,CAACC;AAJhB,WACOD,OAAO,CAACQ,EADf;AAAA;AAAA;AAAA;AAAA,gBADF;AAQD,OATD,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAjCQhB,Y;;KAAAA,Y;AAmCT,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nfunction ExpensesList(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  function handleFilterChange(year) {\n    setFilteredYear(year);\n  }\n\n  const data = props.data.filter(\n    (expense) => expense.date.getFullYear() === parseFloat(filteredYear)\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onFilterChange={handleFilterChange}\n        />\n        {data.length === 0 && <h1>You have no expenses this Year</h1>}\n        {data.length > 0 &&\n          data.map((expense) => {\n            return (\n              <ExpenseItem\n                key={expense.id}\n                title={expense.title}\n                amount={expense.amount}\n                date={expense.date}\n              />\n            );\n          })}\n      </Card>\n    </div>\n  );\n}\n\nexport default ExpensesList;\n"]},"metadata":{},"sourceType":"module"}