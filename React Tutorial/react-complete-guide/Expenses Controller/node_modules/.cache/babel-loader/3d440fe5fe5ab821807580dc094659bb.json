{"ast":null,"code":"var _jsxFileName = \"/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewExpense(props) {\n  _s();\n\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  }\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  function handleClick() {\n    setIsClicked(!isClicked);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isClicked && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add new expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 28\n    }, this), isClicked && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewExpense, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","isClicked","setIsClicked","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB,WAASC,sBAAT,CAAgCC,kBAAhC,EAAmD;AAC/C,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFW,KAApB;AAIAP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB;AACH;;AAED,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASc,WAAT,GAAsB;AAClBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA,eACK,CAACA,SAAD,iBAAc;AAAQ,MAAA,OAAO,EAAGE,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAEKF,SAAS,iBAAI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAIR;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAvBQF,U;;KAAAA,U;AAyBT,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./NewExpense.css\"\nimport ExpenseForm from \"./ExpenseForm\";\n\nfunction NewExpense(props) {\n\n    function saveExpenseDataHandler(enteredExpenseData){\n        const expenseData = {\n            ...enteredExpenseData,\n            id : Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n\n    const [isClicked, setIsClicked] = useState(false)\n\n    function handleClick(){\n        setIsClicked(!isClicked)\n    }\n\n    \n    return (\n        <div className = \"new-expense\">\n            {!isClicked && <button onClick ={handleClick}>Add new expense</button> }\n            {isClicked && <ExpenseForm onSaveExpenseData = {saveExpenseDataHandler}/>}\n        </div>\n    )\n}\n\nexport default NewExpense"]},"metadata":{},"sourceType":"module"}