{"ast":null,"code":"var _jsxFileName = \"/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm(props) {\n  _s();\n\n  function handleClick(e) {\n    console.log(e);\n  } //const [enteredTitle, setEnteredTitle] = useState(\"\")\n  //const [enteredAmount, setEnteredAmount] = useState(\"\")\n  //const [enteredDate, setEnteredDate] = useState(\"\")\n  //You can join the three states in one const using objects\n\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  });\n\n  function titleChangeHandler(e) {\n    //When updating state that depends on the previous state always use this syntax\n    //React executes the function, therefore is sure to create a snapshot of the prevState and avoid data loss\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: e.target.value\n      };\n    });\n  }\n\n  function amountChangeHandler(e) {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredAmount: e.target.value\n      };\n    });\n  }\n\n  function dateChangeHandler(e) {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredDate: e.target.value\n      };\n    });\n  }\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const expenseData = {\n      title: userInput.enteredTitle,\n      amount: parseFloat(userInput.enteredAmount),\n      date: new Date(userInput.enteredDate)\n    };\n    props.onSaveExpenseData(expenseData); //This reset the form fields\n\n    setUserInput({\n      enteredTitle: \"\",\n      enteredAmount: \"\",\n      enteredDate: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add new expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userInput.enteredTitle,\n            onChange: titleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: userInput.enteredAmount,\n            min: \"0.01\",\n            step: \"0.01\",\n            onChange: amountChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: userInput.enteredDate,\n            type: \"date\",\n            min: \"2019-01-01\",\n            max: \"2022-12-31\",\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"fOKiQJ0uFtiE+wpCN1+3hpMhKHE=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/ian/Dev/LearningToCode/React Tutorial/react-complete-guide/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","handleClick","e","console","log","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","prevState","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","parseFloat","date","Date","onSaveExpenseData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE1B,WAASC,WAAT,CAAqBC,CAArB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAJyB,CAM1B;AACA;AACA;AAEA;;;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC;AACzCS,IAAAA,YAAY,EAAE,EAD2B;AAEzCC,IAAAA,aAAa,EAAE,EAF0B;AAGzCC,IAAAA,WAAW,EAAE;AAH4B,GAAD,CAA1C;;AAMA,WAASC,kBAAT,CAA4BR,CAA5B,EAA+B;AAC7B;AACA;AACAI,IAAAA,YAAY,CAAEK,SAAD,IAAe;AAC1B,aAAO,EAAE,GAAGA,SAAL;AAAgBJ,QAAAA,YAAY,EAAEL,CAAC,CAACU,MAAF,CAASC;AAAvC,OAAP;AACD,KAFW,CAAZ;AAGD;;AAED,WAASC,mBAAT,CAA6BZ,CAA7B,EAAgC;AAC9BI,IAAAA,YAAY,CAAEK,SAAD,IAAe;AAC1B,aAAO,EAAE,GAAGA,SAAL;AAAgBH,QAAAA,aAAa,EAAEN,CAAC,CAACU,MAAF,CAASC;AAAxC,OAAP;AACD,KAFW,CAAZ;AAGD;;AAED,WAASE,iBAAT,CAA2Bb,CAA3B,EAA8B;AAC5BI,IAAAA,YAAY,CAAEK,SAAD,IAAe;AAC1B,aAAO,EAAE,GAAGA,SAAL;AAAgBF,QAAAA,WAAW,EAAEP,CAAC,CAACU,MAAF,CAASC;AAAtC,OAAP;AACD,KAFW,CAAZ;AAGD;;AAED,WAASG,aAAT,CAAuBd,CAAvB,EAAyB;AACvBA,IAAAA,CAAC,CAACe,cAAF;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,KAAK,EAAEd,SAAS,CAACE,YADD;AAEhBa,MAAAA,MAAM,EAAEC,UAAU,CAAChB,SAAS,CAACG,aAAX,CAFF;AAGhBc,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAASlB,SAAS,CAACI,WAAnB;AAHU,KAApB;AAMAT,IAAAA,KAAK,CAACwB,iBAAN,CAAwBN,WAAxB,EARuB,CAUvB;;AACAZ,IAAAA,YAAY,CAAC;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAD,CAAZ;AAKD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAIR,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAIe,aAAlB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAIX,SAAS,CAACE,YAAtC;AAAoD,YAAA,QAAQ,EAAEG;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAIL,SAAS,CAACG,aAFrB;AAGE,YAAA,GAAG,EAAC,MAHN;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAeE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAIT,SAAS,CAACI,WADrB;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,GAAG,EAAC,YAHN;AAIE,YAAA,GAAG,EAAC,YAJN;AAKE,YAAA,QAAQ,EAAEM;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,eAyBE;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA5FQhB,W;;KAAAA,W;AA8FT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n\n  function handleClick(e){\n    console.log(e)\n  }\n\n  //const [enteredTitle, setEnteredTitle] = useState(\"\")\n  //const [enteredAmount, setEnteredAmount] = useState(\"\")\n  //const [enteredDate, setEnteredDate] = useState(\"\")\n\n  //You can join the three states in one const using objects\n\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  function titleChangeHandler(e) {\n    //When updating state that depends on the previous state always use this syntax\n    //React executes the function, therefore is sure to create a snapshot of the prevState and avoid data loss\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: e.target.value };\n    });\n  }\n\n  function amountChangeHandler(e) {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredAmount: e.target.value };\n    });\n  }\n\n  function dateChangeHandler(e) {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredDate: e.target.value };\n    });\n  }\n\n  function submitHandler(e){\n    e.preventDefault()\n    const expenseData = {\n        title: userInput.enteredTitle,\n        amount: parseFloat(userInput.enteredAmount),\n        date: new Date(userInput.enteredDate)\n    }\n\n    props.onSaveExpenseData(expenseData)\n    \n    //This reset the form fields\n    setUserInput({\n        enteredTitle: \"\",\n        enteredAmount: \"\",\n        enteredDate: \"\"\n    });\n  }\n\n  return (\n    <div>\n      <button onClick = {handleClick}>Add new expense</button>\n      <form onSubmit = {submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__controls\">\n            <label>Title</label>\n            <input type=\"text\" value = {userInput.enteredTitle} onChange={titleChangeHandler} />\n          </div>\n          <div className=\"new-expense__controls\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              value = {userInput.enteredAmount}\n              min=\"0.01\"\n              step=\"0.01\"\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__controls\">\n            <label>Date</label>\n            <input\n              value = {userInput.enteredDate}\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2022-12-31\"\n              onChange={dateChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__actions\">\n            <button type=\"submit\">Add Expense</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}